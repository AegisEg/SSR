{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\Elements\\\\Input.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// App\nimport React from \"react\"; //PHONE\n\nimport ReactPhoneInput from \"react-phone-input-2\"; //DATE\n\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { toast } from \"react-toastify\"; //DATE\n\nimport EyeOpen from \"../img/sid-view.svg\";\nimport EyeClose from \"../img/eye-close.png\";\nimport ruLocale from \"date-fns/locale/ru\";\n\nclass Input extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showPassword: false,\n      isFocus: false\n    });\n  }\n\n  detectType() {\n    if (this.props.type === \"password\") if (this.state.showPassword) return \"text\";else return \"password\";\n    if (this.props.type === \"number\") return \"text\";else return this.props.type;\n  }\n\n  componentDidMount() {\n    if (this.props.defaultValue && !this.props.value) this.props.onChange({\n      target: {\n        value: this.props.defaultValue\n      }\n    });\n  }\n\n  render() {\n    if (this.props.type === \"phone\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"contents\",\n        position: \"relative\",\n        paddingBottom: this.props.error ? \"10px\" : \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactPhoneInput, {\n        value: this.props.value,\n        inputExtraProps: {\n          name: \"phone\"\n        },\n        specialLabel: false,\n        country: \"ru\",\n        disableDropdown: false,\n        style: this.props.style,\n        inputClass: `col input-text ${this.props.className} ${this.props.error ? \"input-error\" : \"\"}`,\n        placeholder: this.props.placeholder,\n        onChange: val => {\n          this.props.onChange(val);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), this.props.error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-error-label\",\n        children: this.props.error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n\n    if (this.props.type === \"time\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        style: {\n          display: \"contents\",\n          position: \"relative\",\n          paddingBottom: this.props.error ? \"10px\" : \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          locale: ruLocale,\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(TimePicker, {\n            onClickCapture: () => {\n              if (!this.props.date) toast.warning(\"Сначала введите дату \");\n            },\n            onFocus: () => {\n              this.setState({\n                isFocus: true\n              });\n            },\n            clearable: true,\n            clearLabel: \"\\u041E\\u0442\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n            disabled: !!this.props.disabled || (!this.props.date ? true : false),\n            cancelLabel: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n            okLabel: \"\\u041E\\u043A\",\n            ampm: false,\n            onBlur: () => {\n              this.setState({\n                isFocus: false\n              });\n            },\n            InputProps: {\n              className: \"input-time fixed-width\"\n            },\n            format: \"HH:mm\",\n            value: this.props.value,\n            placeholder: this.props.placeholder,\n            minDate: this.props.minDate,\n            onChange: val => {\n              let date = new Date(this.props.date);\n              if (val) val = new Date(date.getFullYear(), date.getMonth(), date.getDate(), val.getHours(), val.getMinutes(), 0);\n              if (this.props.onChange) this.props.onChange(val);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), this.props.error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-error-label\",\n          children: this.props.error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.props.type === \"date\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        style: {\n          display: \"contents\",\n          position: \"relative\",\n          paddingBottom: this.props.error ? \"10px\" : \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          locale: ruLocale,\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            onFocus: () => {\n              this.setState({\n                isFocus: true\n              });\n            },\n            onBlur: () => {\n              this.setState({\n                isFocus: false\n              });\n            },\n            InputProps: {\n              className: \"input-date\"\n            },\n            clearable: true,\n            clearLabel: \"\\u041E\\u0442\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n            cancelLabel: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n            okLabel: \"\\u041E\\u043A\",\n            format: \"dd.MM.yyyy\",\n            className: this.props.className,\n            disablePast: true,\n            value: this.props.value,\n            placeholder: this.props.placeholder,\n            minDate: this.props.minDate,\n            onChange: this.props.onChange ? this.props.onChange : () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), this.props.error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-error-label\",\n          children: this.props.error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      style: {\n        display: this.props.type === \"number\" ? \"block\" : \"contents\",\n        position: \"relative\",\n        paddingBottom: this.props.error ? \"10px\" : \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: this.detectType(),\n        onFocus: () => {\n          this.setState({\n            isFocus: true\n          });\n        },\n        onBlur: () => {\n          this.setState({\n            isFocus: false\n          });\n        },\n        value: this.props.value,\n        name: this.props.name,\n        min: this.props.min,\n        max: this.props.max,\n        style: this.props.style,\n        className: `col input-${this.props.type} ${this.props.className} ${this.props.error ? \"input-error\" : \"\"}`,\n        placeholder: this.props.placeholder,\n        onPaste: e => {\n          e.preventDefault();\n        },\n        onBlur: val => {\n          let value = parseInt(val.target.value) || 0;\n\n          if (this.props.min && value < this.props.min) {\n            val.target.value = 1;\n            this.props.onChange(val);\n          }\n        },\n        onPaste: val => {\n          if (this.props.type === \"number\") {\n            val.target.value = val.target.value.replace(/\\D/, \"\");\n          }\n\n          this.props.onChange(val);\n        },\n        onChange: val => {\n          if (this.props.type === \"number\") {\n            val.target.value = val.target.value.replace(/\\D/, \"\");\n          }\n\n          this.props.onChange(val);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), this.props.type === \"password\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-show-password\",\n        onClick: () => {\n          this.setState({\n            showPassword: !this.state.showPassword\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.showPassword ? EyeOpen : EyeClose,\n          alt: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C/\\u0441\\u043A\\u0440\\u044B\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), this.props.error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-error-label\",\n        children: this.props.error.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["E:/SSR/Elements/Input.js"],"names":["React","ReactPhoneInput","DatePicker","TimePicker","MuiPickersUtilsProvider","DateFnsUtils","toast","EyeOpen","EyeClose","ruLocale","Input","Component","showPassword","isFocus","detectType","props","type","state","componentDidMount","defaultValue","value","onChange","target","render","display","position","paddingBottom","error","name","style","className","placeholder","val","msg","date","warning","setState","disabled","minDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","min","max","e","preventDefault","parseInt","replace"],"mappings":"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","sourcesContent":["// App\r\nimport React from \"react\";\r\n//PHONE\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\n//DATE\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { toast } from \"react-toastify\";\r\n//DATE\r\nimport EyeOpen from \"../img/sid-view.svg\";\r\nimport EyeClose from \"../img/eye-close.png\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nclass Input extends React.Component {\r\n  state = {\r\n    showPassword: false,\r\n    isFocus: false,\r\n  };\r\n  detectType() {\r\n    if (this.props.type === \"password\")\r\n      if (this.state.showPassword) return \"text\";\r\n      else return \"password\";\r\n    if (this.props.type === \"number\") return \"text\";\r\n    else return this.props.type;\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.defaultValue && !this.props.value)\r\n      this.props.onChange({ target: { value: this.props.defaultValue } })\r\n  }\r\n  render() {\r\n    if (this.props.type === \"phone\")\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"contents\",\r\n            position: \"relative\",\r\n            paddingBottom: this.props.error ? \"10px\" : \"0px\",\r\n          }}\r\n        >\r\n          <ReactPhoneInput\r\n            value={this.props.value}\r\n            inputExtraProps={{\r\n              name: \"phone\",\r\n            }}\r\n            specialLabel={false}\r\n            country={\"ru\"}\r\n            disableDropdown={false}\r\n            style={this.props.style}\r\n            inputClass={`col input-text ${this.props.className} ${this.props.error ? \"input-error\" : \"\"\r\n              }`}\r\n            placeholder={this.props.placeholder}\r\n            onChange={(val) => {\r\n              this.props.onChange(val);\r\n            }}\r\n          />\r\n          {this.props.error && (\r\n            <span className=\"input-error-label\">{this.props.error.msg}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    if (this.props.type === \"time\") {\r\n      return (\r\n        <div\r\n          className=\"input\"\r\n          style={{\r\n            display: \"contents\",\r\n            position: \"relative\",\r\n            paddingBottom: this.props.error ? \"10px\" : \"0px\",\r\n          }}\r\n        >\r\n          <MuiPickersUtilsProvider locale={ruLocale} utils={DateFnsUtils}>\r\n            <TimePicker\r\n              onClickCapture={() => {\r\n                if (!this.props.date) toast.warning(\"Сначала введите дату \");\r\n              }}\r\n              onFocus={() => {\r\n                this.setState({ isFocus: true });\r\n              }}\r\n              clearable={true}\r\n              clearLabel=\"Отчистить\"\r\n              disabled={\r\n                !!this.props.disabled || (!this.props.date ? true : false)\r\n              }\r\n              cancelLabel=\"Закрыть\"\r\n              okLabel=\"Ок\"\r\n              ampm={false}\r\n              onBlur={() => {\r\n                this.setState({ isFocus: false });\r\n              }}\r\n              InputProps={{\r\n                className: \"input-time fixed-width\",\r\n              }}\r\n              format=\"HH:mm\"\r\n              value={this.props.value}\r\n              placeholder={this.props.placeholder}\r\n              minDate={this.props.minDate}\r\n              onChange={(val) => {\r\n                let date = new Date(this.props.date);\r\n                if (val)\r\n                  val = new Date(\r\n                    date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDate(),\r\n                    val.getHours(),\r\n                    val.getMinutes(),\r\n                    0\r\n                  );\r\n                if (this.props.onChange) this.props.onChange(val);\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          {this.props.error && (\r\n            <span className=\"input-error-label\">{this.props.error.msg}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.type === \"date\") {\r\n      return (\r\n        <div\r\n          className=\"input\"\r\n          style={{\r\n            display: \"contents\",\r\n            position: \"relative\",\r\n            paddingBottom: this.props.error ? \"10px\" : \"0px\",\r\n          }}\r\n        >\r\n          <MuiPickersUtilsProvider locale={ruLocale} utils={DateFnsUtils}>\r\n            <DatePicker\r\n              onFocus={() => {\r\n                this.setState({ isFocus: true });\r\n              }}\r\n              onBlur={() => {\r\n                this.setState({ isFocus: false });\r\n              }}\r\n              InputProps={{\r\n                className: \"input-date\",\r\n              }}\r\n              clearable={true}\r\n              clearLabel=\"Отчистить\"\r\n              cancelLabel=\"Закрыть\"\r\n              okLabel=\"Ок\"\r\n              format=\"dd.MM.yyyy\"\r\n              className={this.props.className}\r\n              disablePast\r\n              value={this.props.value}\r\n              placeholder={this.props.placeholder}\r\n              minDate={this.props.minDate}\r\n              onChange={this.props.onChange ? this.props.onChange : () => { }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          {this.props.error && (\r\n            <span className=\"input-error-label\">{this.props.error.msg}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div\r\n          className=\"input\"\r\n          style={{\r\n            display: this.props.type === \"number\" ? \"block\" : \"contents\",\r\n            position: \"relative\",\r\n            paddingBottom: this.props.error ? \"10px\" : \"0px\",\r\n          }}\r\n        >\r\n          <input\r\n            type={this.detectType()}\r\n            onFocus={() => {\r\n              this.setState({ isFocus: true });\r\n            }}\r\n            onBlur={() => {\r\n              this.setState({ isFocus: false });\r\n            }}\r\n            value={this.props.value}\r\n            name={this.props.name}\r\n            min={this.props.min}\r\n            max={this.props.max}\r\n            style={this.props.style}\r\n            className={`col input-${this.props.type} ${this.props.className} ${this.props.error ? \"input-error\" : \"\"\r\n              }`}\r\n            placeholder={this.props.placeholder}\r\n            onPaste={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n            onBlur={(val) => {\r\n              let value = parseInt(val.target.value) || 0;\r\n              if (this.props.min && value < this.props.min) {\r\n                val.target.value = 1;\r\n                this.props.onChange(val);\r\n              }\r\n            }}\r\n            onPaste={(val) => {\r\n              if (this.props.type === \"number\") {\r\n                val.target.value = val.target.value.replace(/\\D/, \"\");\r\n              }\r\n              this.props.onChange(val);\r\n            }}\r\n\r\n            onChange={(val) => {\r\n              if (this.props.type === \"number\") {\r\n                val.target.value = val.target.value.replace(/\\D/, \"\");\r\n              }\r\n              this.props.onChange(val);\r\n            }}\r\n          />\r\n          {this.props.type === \"password\" && (\r\n            <div\r\n              className=\"toggle-show-password\"\r\n              onClick={() => {\r\n                this.setState({ showPassword: !this.state.showPassword });\r\n              }}\r\n            >\r\n              <img\r\n                src={this.state.showPassword ? EyeOpen : EyeClose}\r\n                alt=\"Показать/скрыть пароль\"\r\n              />\r\n            </div>\r\n          )}\r\n          {this.props.error && (\r\n            <span className=\"input-error-label\">{this.props.error.msg}</span>\r\n          )}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}