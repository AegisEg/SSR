{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\Elements\\\\Notification.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// App\nimport React from \"react\";\nimport notification from \"../config/notifications\";\nimport yellowAngle from \"../img/yellowAngle.svg\";\n\nvar Notification = /*#__PURE__*/function (_React$Component) {\n  _inherits(Notification, _React$Component);\n\n  var _super = _createSuper(Notification);\n\n  function Notification() {\n    _classCallCheck(this, Notification);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Notification, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.onlyText) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: notification.find(function (item) {\n            return item.code === _this.props.notification.code;\n          }).text(this.props.notification.info)\n        }, void 0, false);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item \".concat(this.props.notification.isRead ? \"\" : \"unreadble\", \" \"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid row d-block d-sm-flex mx-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: new Date(this.props.notification.createdAt).toDateR()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: new Date(this.props.notification.createdAt).toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col px-0 px-sm-3 text-notification\",\n            children: notification.find(function (item) {\n              return item.code === _this.props.notification.code;\n            }).text(this.props.notification.info)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"readble_col\",\n            children: this.props.notification.isRead ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"readble\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: yellowAngle,\n                className: \"mr-3\",\n                alt: \"yellowAngle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u043E\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-read\",\n              onClick: function onClick() {\n                _this.props.reading(_this.props.notification._id, _this.props.notification.type);\n              },\n              children: \"\\u041E\\u0442\\u043C\\u0435\\u0442\\u0438\\u0442\\u044C \\u043A\\u0430\\u043A \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Notification;\n}(React.Component);\n\nexport default Notification;","map":{"version":3,"sources":["E:/SSR/Elements/Notification.js"],"names":["React","notification","yellowAngle","Notification","props","onlyText","find","item","code","text","info","isRead","Date","createdAt","toDateR","toLocaleTimeString","hour","minute","reading","_id","type","Component"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;IACMC,Y;;;;;;;;;;;;;6BACK;AAAA;;AACP,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,4BACE;AAAA,oBACGJ,YAAY,CACVK,IADF,CACO,UAACC,IAAD;AAAA,mBAAUA,IAAI,CAACC,IAAL,KAAc,KAAI,CAACJ,KAAL,CAAWH,YAAX,CAAwBO,IAAhD;AAAA,WADP,EAEEC,IAFF,CAEO,KAAKL,KAAL,CAAWH,YAAX,CAAwBS,IAF/B;AADH,yBADF;AAOD,OARD,MASE,oBACE;AACE,QAAA,SAAS,8BACP,KAAKN,KAAL,CAAWH,YAAX,CAAwBU,MAAxB,GAAiC,EAAjC,GAAsC,WAD/B,MADX;AAAA,gCAKE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAK,UAAA,SAAS,EAAC,4CAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACG,IAAIC,IAAJ,CAAS,KAAKR,KAAL,CAAWH,YAAX,CAAwBY,SAAjC,EAA4CC,OAA5C;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACG,IAAIF,IAAJ,CAAS,KAAKR,KAAL,CAAWH,YAAX,CAAwBY,SAAjC,EAA4CE,kBAA5C,CACC,EADD,EAEC;AACEC,gBAAAA,IAAI,EAAE,SADR;AAEEC,gBAAAA,MAAM,EAAE;AAFV,eAFD;AADH;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAK,YAAA,SAAS,EAAC,oCAAf;AAAA,sBACGhB,YAAY,CACVK,IADF,CACO,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACC,IAAL,KAAc,KAAI,CAACJ,KAAL,CAAWH,YAAX,CAAwBO,IAAhD;AAAA,aADP,EAEEC,IAFF,CAEO,KAAKL,KAAL,CAAWH,YAAX,CAAwBS,IAF/B;AADH;AAAA;AAAA;AAAA;AAAA,kBAfF,eAoBE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACG,KAAKN,KAAL,CAAWH,YAAX,CAAwBU,MAAxB,gBACC;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAET,WAAV;AAAuB,gBAAA,SAAS,EAAC,MAAjC;AAAwC,gBAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAMC;AACE,cAAA,SAAS,EAAC,aADZ;AAEE,cAAA,OAAO,EAAE,mBAAM;AACb,gBAAA,KAAI,CAACE,KAAL,CAAWc,OAAX,CACE,KAAI,CAACd,KAAL,CAAWH,YAAX,CAAwBkB,GAD1B,EAEE,KAAI,CAACf,KAAL,CAAWH,YAAX,CAAwBmB,IAF1B;AAID,eAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAkDH;;;;EA7DwBpB,KAAK,CAACqB,S;;AAgEjC,eAAelB,YAAf","sourcesContent":["// App\r\nimport React from \"react\";\r\nimport notification from \"../config/notifications\";\r\nimport yellowAngle from \"../img/yellowAngle.svg\";\r\nclass Notification extends React.Component {\r\n  render() {\r\n    if (this.props.onlyText) {\r\n      return (\r\n        <>\r\n          {notification\r\n            .find((item) => item.code === this.props.notification.code)\r\n            .text(this.props.notification.info)}\r\n        </>\r\n      );\r\n    } else\r\n      return (\r\n        <div\r\n          className={`notification-item ${\r\n            this.props.notification.isRead ? \"\" : \"unreadble\"\r\n          } `}\r\n        >\r\n          <div className=\"border-top\"></div>\r\n          <div className=\"container-fluid row d-block d-sm-flex mx-0\">\r\n            <div className=\"\">\r\n              <div className=\"date\">\r\n                {new Date(this.props.notification.createdAt).toDateR()}\r\n              </div>\r\n              <div className=\"time\">\r\n                {new Date(this.props.notification.createdAt).toLocaleTimeString(\r\n                  [],\r\n                  {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col px-0 px-sm-3 text-notification\">\r\n              {notification\r\n                .find((item) => item.code === this.props.notification.code)\r\n                .text(this.props.notification.info)}\r\n            </div>\r\n            <div className=\"readble_col\">\r\n              {this.props.notification.isRead ? (\r\n                <span className=\"readble\">\r\n                  <img src={yellowAngle} className=\"mr-3\" alt=\"yellowAngle\" />\r\n                  Просмотрено\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  className=\"action-read\"\r\n                  onClick={() => {\r\n                    this.props.reading(\r\n                      this.props.notification._id,\r\n                      this.props.notification.type\r\n                    );\r\n                  }}\r\n                >\r\n                  Отметить как просмотрено\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}