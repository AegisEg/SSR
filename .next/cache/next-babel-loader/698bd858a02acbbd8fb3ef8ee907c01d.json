{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\Elements\\\\Notification.js\";\n// App\nimport React from \"react\";\nimport notification from \"../config/notifications\";\nimport yellowAngle from \"../img/yellowAngle.svg\";\n\nclass Notification extends React.Component {\n  render() {\n    if (this.props.onlyText) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: notification.find(item => item.code === this.props.notification.code).text(this.props.notification.info)\n      }, void 0, false);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification-item ${this.props.notification.isRead ? \"\" : \"unreadble\"} `,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid row d-block d-sm-flex mx-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new Date(this.props.notification.createdAt).toDateR()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: new Date(this.props.notification.createdAt).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col px-0 px-sm-3 text-notification\",\n          children: notification.find(item => item.code === this.props.notification.code).text(this.props.notification.info)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"readble_col\",\n          children: this.props.notification.isRead ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"readble\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: yellowAngle,\n              className: \"mr-3\",\n              alt: \"yellowAngle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u043E\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"action-read\",\n            onClick: () => {\n              this.props.reading(this.props.notification._id, this.props.notification.type);\n            },\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u0442\\u0438\\u0442\\u044C \\u043A\\u0430\\u043A \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Notification;","map":{"version":3,"sources":["E:/SSR/Elements/Notification.js"],"names":["React","notification","yellowAngle","Notification","Component","render","props","onlyText","find","item","code","text","info","isRead","Date","createdAt","toDateR","toLocaleTimeString","hour","minute","reading","_id","type"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AACA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,0BACE;AAAA,kBACGN,YAAY,CACVO,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,KAAKJ,KAAL,CAAWL,YAAX,CAAwBS,IADvD,EAEEC,IAFF,CAEO,KAAKL,KAAL,CAAWL,YAAX,CAAwBW,IAF/B;AADH,uBADF;AAOD,KARD,MASE,oBACE;AACE,MAAA,SAAS,EAAG,qBACV,KAAKN,KAAL,CAAWL,YAAX,CAAwBY,MAAxB,GAAiC,EAAjC,GAAsC,WACvC,GAHH;AAAA,8BAKE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBACG,IAAIC,IAAJ,CAAS,KAAKR,KAAL,CAAWL,YAAX,CAAwBc,SAAjC,EAA4CC,OAA5C;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBACG,IAAIF,IAAJ,CAAS,KAAKR,KAAL,CAAWL,YAAX,CAAwBc,SAAjC,EAA4CE,kBAA5C,CACC,EADD,EAEC;AACEC,cAAAA,IAAI,EAAE,SADR;AAEEC,cAAAA,MAAM,EAAE;AAFV,aAFD;AADH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,oBACGlB,YAAY,CACVO,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,KAAKJ,KAAL,CAAWL,YAAX,CAAwBS,IADvD,EAEEC,IAFF,CAEO,KAAKL,KAAL,CAAWL,YAAX,CAAwBW,IAF/B;AADH;AAAA;AAAA;AAAA;AAAA,gBAfF,eAoBE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBACG,KAAKN,KAAL,CAAWL,YAAX,CAAwBY,MAAxB,gBACC;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,oCACE;AAAK,cAAA,GAAG,EAAEX,WAAV;AAAuB,cAAA,SAAS,EAAC,MAAjC;AAAwC,cAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAMC;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACb,mBAAKI,KAAL,CAAWc,OAAX,CACE,KAAKd,KAAL,CAAWL,YAAX,CAAwBoB,GAD1B,EAEE,KAAKf,KAAL,CAAWL,YAAX,CAAwBqB,IAF1B;AAID,aAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkDH;;AA7DwC;;AAgE3C,eAAenB,YAAf","sourcesContent":["// App\r\nimport React from \"react\";\r\nimport notification from \"../config/notifications\";\r\nimport yellowAngle from \"../img/yellowAngle.svg\";\r\nclass Notification extends React.Component {\r\n  render() {\r\n    if (this.props.onlyText) {\r\n      return (\r\n        <>\r\n          {notification\r\n            .find((item) => item.code === this.props.notification.code)\r\n            .text(this.props.notification.info)}\r\n        </>\r\n      );\r\n    } else\r\n      return (\r\n        <div\r\n          className={`notification-item ${\r\n            this.props.notification.isRead ? \"\" : \"unreadble\"\r\n          } `}\r\n        >\r\n          <div className=\"border-top\"></div>\r\n          <div className=\"container-fluid row d-block d-sm-flex mx-0\">\r\n            <div className=\"\">\r\n              <div className=\"date\">\r\n                {new Date(this.props.notification.createdAt).toDateR()}\r\n              </div>\r\n              <div className=\"time\">\r\n                {new Date(this.props.notification.createdAt).toLocaleTimeString(\r\n                  [],\r\n                  {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col px-0 px-sm-3 text-notification\">\r\n              {notification\r\n                .find((item) => item.code === this.props.notification.code)\r\n                .text(this.props.notification.info)}\r\n            </div>\r\n            <div className=\"readble_col\">\r\n              {this.props.notification.isRead ? (\r\n                <span className=\"readble\">\r\n                  <img src={yellowAngle} className=\"mr-3\" alt=\"yellowAngle\" />\r\n                  Просмотрено\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  className=\"action-read\"\r\n                  onClick={() => {\r\n                    this.props.reading(\r\n                      this.props.notification._id,\r\n                      this.props.notification.type\r\n                    );\r\n                  }}\r\n                >\r\n                  Отметить как просмотрено\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}