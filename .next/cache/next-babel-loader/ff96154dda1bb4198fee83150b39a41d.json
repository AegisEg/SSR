{"ast":null,"code":"import { USER_LOGOUT, USER_LOGIN, NOTIFICATIONS_NOREAD_GET } from \"../constants\";\nimport api from \"../../config/api\";\nexport const logoutUser = () => dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const loginUser = apiToken => dispatch => {\n  return new Promise((resolve, reject) => {\n    fetch(`${api.urlApi}/api/user`, {\n      method: \"get\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiToken}`\n      }\n    }).then(response => response.json()).then(async ({\n      user,\n      myCountsArticles,\n      takeCountsArticles,\n      onlyNoRead,\n      notificationCounts,\n      dialogsCount\n    }) => {\n      user.apiToken = apiToken;\n      dispatch({\n        type: USER_LOGIN,\n        payload: user\n      });\n      dispatch({\n        type: NOTIFICATIONS_NOREAD_GET,\n        payload: onlyNoRead\n      }); // dispatch({\n      //   type: DIALOGS_SET_NOREAD,\n      //   payload: { dialogsCount },\n      // });\n\n      resolve();\n    });\n  });\n};","map":{"version":3,"sources":["E:/SSR/redux/actions/user.js"],"names":["USER_LOGOUT","USER_LOGIN","NOTIFICATIONS_NOREAD_GET","api","logoutUser","dispatch","type","loginUser","apiToken","Promise","resolve","reject","fetch","urlApi","method","headers","Accept","Authorization","then","response","json","user","myCountsArticles","takeCountsArticles","onlyNoRead","notificationCounts","dialogsCount","payload"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,wBAHF,QAIO,cAJP;AAKA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAGD,CAJM;AAKP,OAAO,MAAMO,SAAS,GAAIC,QAAD,IAAeH,QAAD,IAAc;AACnD,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,KAAK,CAAE,GAAET,GAAG,CAACU,MAAO,WAAf,EAA2B;AAC9BC,MAAAA,MAAM,EAAE,KADsB;AAE9BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAG,UAAST,QAAS;AAH3B;AAFqB,KAA3B,CAAL,CAQGU,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CAUI,OAAO;AACLG,MAAAA,IADK;AAELC,MAAAA,gBAFK;AAGLC,MAAAA,kBAHK;AAILC,MAAAA,UAJK;AAKLC,MAAAA,kBALK;AAMLC,MAAAA;AANK,KAAP,KAOM;AACJL,MAAAA,IAAI,CAACb,QAAL,GAAgBA,QAAhB;AACAH,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,UADC;AAEP0B,QAAAA,OAAO,EAAEN;AAFF,OAAD,CAAR;AAKAhB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,wBADC;AAEPyB,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR,CAPI,CAYJ;AACA;AACA;AACA;;AACAd,MAAAA,OAAO;AACR,KAlCL;AAoCD,GArCM,CAAP;AAsCD,CAvCM","sourcesContent":["import {\r\n  USER_LOGOUT,\r\n  USER_LOGIN,\r\n  NOTIFICATIONS_NOREAD_GET,\r\n} from \"../constants\";\r\nimport api from \"../../config/api\";\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n};\r\nexport const loginUser = (apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/user`, {\r\n      method: \"get\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then(\r\n        async ({\r\n          user,\r\n          myCountsArticles,\r\n          takeCountsArticles,\r\n          onlyNoRead,\r\n          notificationCounts,\r\n          dialogsCount,\r\n        }) => {\r\n          user.apiToken = apiToken;\r\n          dispatch({\r\n            type: USER_LOGIN,\r\n            payload: user,\r\n          });\r\n\r\n          dispatch({\r\n            type: NOTIFICATIONS_NOREAD_GET,\r\n            payload: onlyNoRead,\r\n          });\r\n\r\n          // dispatch({\r\n          //   type: DIALOGS_SET_NOREAD,\r\n          //   payload: { dialogsCount },\r\n          // });\r\n          resolve();\r\n        }\r\n      );\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}