{"ast":null,"code":"import { NOTIFICATIONS_READ_ALL } from \"../constants\";\nimport api from \"../../config/api\"; // import SocketController from \"../../controllers/SocketController\";\n\nexport var notificationsReadAll = function notificationsReadAll(apiToken) {\n  return function (dispatch) {// return new Promise((resolve, reject) => {\n    //   fetch(`${api.urlApi}/api/notification/read-all`, {\n    //     method: \"post\",\n    //     headers: {\n    //       Accept: \"application/json\",\n    //       \"Content-Type\": \"application/json\",\n    //       Authorization: `Bearer ${apiToken}`,\n    //     },\n    //     body: JSON.stringify({\n    //       socketId: SocketController.getSocketId(),\n    //     }),\n    //   })\n    //     .then((response) => response.json())\n    //     .then(({ error }) => {\n    //       if (!error)\n    //         dispatch({\n    //           type: NOTIFICATIONS_READ_ALL,\n    //         });\n    //       resolve();\n    //     });\n    // });\n  };\n};","map":{"version":3,"sources":["E:/SSR/redux/actions/notification.js"],"names":["NOTIFICATIONS_READ_ALL","api","notificationsReadAll","apiToken","dispatch"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,cAAvC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB,C,CACA;;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD;AAAA,SAAc,UAACC,QAAD,EAAc,CAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAtBmC;AAAA,CAA7B","sourcesContent":["import { NOTIFICATIONS_READ_ALL } from \"../constants\";\r\n\r\nimport api from \"../../config/api\";\r\n// import SocketController from \"../../controllers/SocketController\";\r\nexport const notificationsReadAll = (apiToken) => (dispatch) => {\r\n  // return new Promise((resolve, reject) => {\r\n  //   fetch(`${api.urlApi}/api/notification/read-all`, {\r\n  //     method: \"post\",\r\n  //     headers: {\r\n  //       Accept: \"application/json\",\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       Authorization: `Bearer ${apiToken}`,\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       socketId: SocketController.getSocketId(),\r\n  //     }),\r\n  //   })\r\n  //     .then((response) => response.json())\r\n  //     .then(({ error }) => {\r\n  //       if (!error)\r\n  //         dispatch({\r\n  //           type: NOTIFICATIONS_READ_ALL,\r\n  //         });\r\n  //       resolve();\r\n  //     });\r\n  // });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}