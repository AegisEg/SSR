{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\Elements\\\\InputPhone.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// App\nimport React from \"react\"; //PHONE\n\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport Button from \"../Elements/Button\";\nimport Input from \"../Elements/Input\";\nimport api from \"../config/api\";\nimport LoadingFixed from \"../Elements/LoadingFixed\";\nimport { toast } from \"react-toastify\";\n\nclass InputPhone extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isSend: false,\n      timer: false,\n      disabled: false,\n      code: false,\n      codeHash: false,\n      isUnique: false,\n      isFetching: false,\n      isUniqueCanDo: true\n    });\n\n    _defineProperty(this, \"refresh\", () => {\n      this.setState({\n        isSend: false,\n        timer: false,\n        disabled: false,\n        code: false,\n        codeHash: false,\n        isFetching: false,\n        isUniqueCanDo: true\n      });\n    });\n\n    _defineProperty(this, \"sendSMS\", () => {\n      if (this.props.value.length === 11 && this.state.isUnique && !this.state.isFetching) {\n        this.setState({\n          isSend: true,\n          disabled: true,\n          timer: 60,\n          isFetching: true\n        }, () => {\n          fetch(`${api.urlApi}/auth/smsSend`, {\n            method: \"post\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              phone: this.props.value\n            })\n          }).then(response => response.json()).then(({\n            error,\n            code,\n            codeReal\n          }) => {\n            if (error) {\n              toast.error(\"Сообщение не доставлено. Свяжитесь с админстратором!\");\n              this.props.setVerified(false);\n              this.refresh();\n            } else {\n              alert(codeReal);\n              this.setState({\n                isFetching: false,\n                codeHash: code\n              });\n              let Interval = setInterval(async () => {\n                if (!!this.state.timer) this.setState({\n                  timer: this.state.timer - 1\n                });else {\n                  clearInterval(Interval);\n\n                  if (this.props.isVerified !== \"success\") {\n                    this.props.setVerified(false);\n                    this.refresh();\n                  }\n                }\n              }, 1000);\n            }\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingFixed, {\n        isLoading: this.state.isFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col \",\n        style: {\n          paddingBottom: !this.state.isUnique && this.props.value.length === 11 && !this.state.isFetching && !this.state.isUniqueCanDo ? \"15px\" : \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"contents\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ReactPhoneInput, {\n            inputExtraProps: {\n              name: \"phone\"\n            },\n            disabled: this.state.disabled,\n            country: \"ru\",\n            disableDropdown: false,\n            style: this.props.style,\n            inputClass: `col input-text ${this.props.className} ${this.props.error ? \"input-error\" : \"\"}`,\n            specialLabel: false,\n            placeholder: this.props.placeholder,\n            value: this.props.value,\n            on: true,\n            onChange: val => {\n              if (!this.state.isSend) {\n                if (val.length < this.props.value.length) this.setState({\n                  isUnique: false,\n                  isUniqueCanDo: true\n                });\n\n                if (val != this.props.value && val.length === 11) {\n                  this.setState({\n                    isFetching: true\n                  }, () => {\n                    fetch(`${api.urlApi}/auth/uniquePhone`, {\n                      method: \"post\",\n                      headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\"\n                      },\n                      body: JSON.stringify({\n                        phone: val\n                      })\n                    }).then(response => response.json()).then(({\n                      error,\n                      unique\n                    }) => {\n                      this.setState({\n                        isUnique: unique,\n                        isFetching: false,\n                        isUniqueCanDo: false\n                      });\n                    });\n                  });\n                }\n\n                this.props.onChange(val);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), !this.state.isUnique && this.props.value.length === 11 && !this.state.isFetching && !this.state.isUniqueCanDo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-error-label\",\n            children: \"\\u042D\\u0442\\u043E\\u0442 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0443\\u0436\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-sm-4 text-right mt-3 mt-sm-0 verified-field\",\n        style: {\n          alignSelf: \"flex-start\"\n        },\n        children: [this.props.isVerified === false && !this.state.isSend && /*#__PURE__*/_jsxDEV(Button, {\n          paddingVertical: \"8px\",\n          disable: this.props.value.length !== 11 && this.state.isUnique && !this.state.isFetching,\n          type: \"empty\",\n          onClick: this.sendSMS,\n          children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), !(this.props.isVerified === \"success\" || this.props.isVerified === \"error\") && this.state.isSend && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"contents\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"input-error\",\n            value: this.state.code || \"\",\n            placeholder: \"\\u041A\\u043E\\u0434\",\n            onChange: e => {\n              if (e.target.value.length <= 4 && !this.state.isFetching) this.setState({\n                code: e.target.value\n              }, () => {\n                if (this.state.code.length === 4) {\n                  fetch(`${api.urlApi}/auth/compareCode`, {\n                    method: \"post\",\n                    headers: {\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      codeHash: this.state.codeHash,\n                      code: this.state.code\n                    })\n                  }).then(response => response.json()).then(compare => {\n                    if (compare) this.props.setVerified(\"success\");else this.props.setVerified(\"error\");\n                  });\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-error-label\",\n            children: [\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \", this.state.timer, \" \\u0441\\u0435\\u043A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), this.props.isVerified === \"success\" && \"Подтвержден\", this.props.isVerified === \"error\" && `Повторно отправить смс можно через ${this.state.timer}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InputPhone;","map":{"version":3,"sources":["E:/SSR/Elements/InputPhone.js"],"names":["React","ReactPhoneInput","Button","Input","api","LoadingFixed","toast","InputPhone","Component","isSend","timer","disabled","code","codeHash","isUnique","isFetching","isUniqueCanDo","setState","props","value","length","state","fetch","urlApi","method","headers","Accept","body","JSON","stringify","phone","then","response","json","error","codeReal","setVerified","refresh","alert","Interval","setInterval","clearInterval","isVerified","render","paddingBottom","display","position","name","style","className","placeholder","val","unique","onChange","alignSelf","sendSMS","e","target","compare"],"mappings":"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","sourcesContent":["// App\r\nimport React from \"react\";\r\n//PHONE\r\nimport ReactPhoneInput from \"react-phone-input-2\";\r\nimport Button from \"../Elements/Button\";\r\nimport Input from \"../Elements/Input\";\r\nimport api from \"../config/api\";\r\nimport LoadingFixed from \"../Elements/LoadingFixed\";\r\nimport { toast } from \"react-toastify\";\r\nclass InputPhone extends React.Component {\r\n  state = {\r\n    isSend: false,\r\n    timer: false,\r\n    disabled: false,\r\n    code: false,\r\n    codeHash: false,\r\n    isUnique: false,\r\n    isFetching: false,\r\n    isUniqueCanDo: true,\r\n  };\r\n  refresh = () => {\r\n    this.setState({\r\n      isSend: false,\r\n      timer: false,\r\n      disabled: false,\r\n      code: false,\r\n      codeHash: false,\r\n      isFetching: false,\r\n      isUniqueCanDo: true,\r\n    });\r\n  };\r\n  sendSMS = () => {\r\n    if (\r\n      this.props.value.length === 11 &&\r\n      this.state.isUnique &&\r\n      !this.state.isFetching\r\n    ) {\r\n      this.setState(\r\n        {\r\n          isSend: true,\r\n          disabled: true,\r\n          timer: 60,\r\n          isFetching: true,\r\n        },\r\n        () => {\r\n          fetch(`${api.urlApi}/auth/smsSend`, {\r\n            method: \"post\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              phone: this.props.value,\r\n            }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then(({ error, code, codeReal }) => {\r\n              if (error) {\r\n                toast.error(\r\n                  \"Сообщение не доставлено. Свяжитесь с админстратором!\"\r\n                );\r\n                this.props.setVerified(false);\r\n                this.refresh();\r\n              } else {\r\n                alert(codeReal);\r\n                this.setState({ isFetching: false, codeHash: code });\r\n                let Interval = setInterval(async () => {\r\n                  if (!!this.state.timer)\r\n                    this.setState({\r\n                      timer: this.state.timer - 1,\r\n                    });\r\n                  else {\r\n                    clearInterval(Interval);\r\n                    if (this.props.isVerified !== \"success\") {\r\n                      this.props.setVerified(false);\r\n                      this.refresh();\r\n                    }\r\n                  }\r\n                }, 1000);\r\n              }\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <LoadingFixed isLoading={this.state.isFetching} />\r\n        <div\r\n          className=\"col \"\r\n          style={{\r\n            paddingBottom:\r\n              !this.state.isUnique &&\r\n              this.props.value.length === 11 &&\r\n              !this.state.isFetching &&\r\n              !this.state.isUniqueCanDo\r\n                ? \"15px\"\r\n                : \"0px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"contents\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <ReactPhoneInput\r\n              inputExtraProps={{\r\n                name: \"phone\",\r\n              }}\r\n              disabled={this.state.disabled}\r\n              country={\"ru\"}\r\n              disableDropdown={false}\r\n              style={this.props.style}\r\n              inputClass={`col input-text ${this.props.className} ${\r\n                this.props.error ? \"input-error\" : \"\"\r\n              }`}\r\n              specialLabel={false}\r\n              placeholder={this.props.placeholder}\r\n              value={this.props.value}\r\n              on\r\n              onChange={(val) => {\r\n                if (!this.state.isSend) {\r\n                  if (val.length < this.props.value.length)\r\n                    this.setState({ isUnique: false, isUniqueCanDo: true });\r\n                  if (val != this.props.value && val.length === 11) {\r\n                    this.setState({ isFetching: true }, () => {\r\n                      fetch(`${api.urlApi}/auth/uniquePhone`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                          Accept: \"application/json\",\r\n                          \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify({\r\n                          phone: val,\r\n                        }),\r\n                      })\r\n                        .then((response) => response.json())\r\n                        .then(({ error, unique }) => {\r\n                          this.setState({\r\n                            isUnique: unique,\r\n                            isFetching: false,\r\n                            isUniqueCanDo: false,\r\n                          });\r\n                        });\r\n                    });\r\n                  }\r\n                  this.props.onChange(val);\r\n                }\r\n              }}\r\n            />\r\n            {!this.state.isUnique &&\r\n              this.props.value.length === 11 &&\r\n              !this.state.isFetching &&\r\n              !this.state.isUniqueCanDo && (\r\n                <span className=\"input-error-label\">\r\n                  Этот номер уже используется\r\n                </span>\r\n              )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"col-12 col-sm-4 text-right mt-3 mt-sm-0 verified-field\"\r\n          style={{\r\n            alignSelf: \"flex-start\",\r\n          }}\r\n        >\r\n          {this.props.isVerified === false && !this.state.isSend && (\r\n            <Button\r\n              paddingVertical={\"8px\"}\r\n              disable={\r\n                this.props.value.length !== 11 &&\r\n                this.state.isUnique &&\r\n                !this.state.isFetching\r\n              }\r\n              type=\"empty\"\r\n              onClick={this.sendSMS}\r\n            >\r\n              Получить код\r\n            </Button>\r\n          )}\r\n          {!(\r\n            this.props.isVerified === \"success\" ||\r\n            this.props.isVerified === \"error\"\r\n          ) &&\r\n            this.state.isSend && (\r\n              <div\r\n                style={{\r\n                  display: \"contents\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"input-error\"\r\n                  value={this.state.code || \"\"}\r\n                  placeholder=\"Код\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value.length <= 4 && !this.state.isFetching)\r\n                      this.setState(\r\n                        {\r\n                          code: e.target.value,\r\n                        },\r\n                        () => {\r\n                          if (this.state.code.length === 4) {\r\n                            fetch(`${api.urlApi}/auth/compareCode`, {\r\n                              method: \"post\",\r\n                              headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                              },\r\n                              body: JSON.stringify({\r\n                                codeHash: this.state.codeHash,\r\n                                code: this.state.code,\r\n                              }),\r\n                            })\r\n                              .then((response) => response.json())\r\n                              .then((compare) => {\r\n                                if (compare) this.props.setVerified(\"success\");\r\n                                else this.props.setVerified(\"error\");\r\n                              });\r\n                          }\r\n                        }\r\n                      );\r\n                  }}\r\n                ></Input>\r\n                <span className=\"input-error-label\">\r\n                  Осталось {this.state.timer} сек\r\n                </span>\r\n              </div>\r\n            )}\r\n          {this.props.isVerified === \"success\" && \"Подтвержден\"}\r\n          {this.props.isVerified === \"error\" &&\r\n            `Повторно отправить смс можно через ${this.state.timer}`}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputPhone;\r\n"]},"metadata":{},"sourceType":"module"}