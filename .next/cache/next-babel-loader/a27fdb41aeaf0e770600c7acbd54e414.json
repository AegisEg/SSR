{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\SSR\\\\config\\\\baseInfo\\\\cargoTypesList.js\",\n    _this = this;\n\nimport box from \"../../img/offer&order/box.svg\";\nimport circles from \"../../img/offer&order/circles.svg\";\nimport commerce from \"../../img/offer&order/commerce.svg\";\nimport divan from \"../../img/offer&order/divan.svg\";\nimport hand from \"../../img/offer&order/hand.svg\";\nimport list from \"../../img/offer&order/list.svg\";\nimport CheckBox from \"../../Elements/CheckBox\";\nimport Input from \"../../Elements/Input\";\nimport Select from \"../../Elements/Select\";\nimport React from \"react\"; //fieldsLabel  Лейблы полей для вывода\n//Fields функция вывода полей для типа груза\n//fields функция принимает\n//1)Функцию изменения параметра\n//2)Параметры для вставки в значение полей\n//3) Типы машин, для уловного рендеринга полей. Некоторые отсутсвуют в каком то типе машин\n\nexport default [{\n  id: 1,\n  name: \"Коробка\",\n  img: box,\n  isStandart: true\n}, {\n  id: 2,\n  name: \"Мебель \",\n  img: divan,\n  isStandart: true\n}, {\n  id: 3,\n  name: \"Строительные грузы\",\n  img: list,\n  fieldsLabel: {\n    type: \"Тип\",\n    volumeInLiter: \"Объем в литрах\",\n    volumeInMetr: \"Объем в м&sup3;\",\n    weight: \"Вес в тоннах\"\n  },\n  fields: function fields(callback, obj) {\n    var car = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var arrayCheck = [\"Насыпные\", \"Наливные\", \"Обычные\"];\n    if (car && car.find(function (item) {\n      return item === 1 || item === 9 || item === 11 || item === 12 || item === 2 || item === 3;\n    })) arrayCheck = [arrayCheck[2]];\n    if (car && car.find(function (item) {\n      return item === 10 || item === 7;\n    })) arrayCheck = [arrayCheck[0]];\n    if (car && car.find(function (item) {\n      return item === 6;\n    })) arrayCheck = [arrayCheck[1]];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [arrayCheck.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"constructionType\".concat(index),\n            name: \"type\",\n            value: obj[\"type\"] == item,\n            onChange: function onChange() {\n              if (obj[\"type\"] == item) callback(3, \"type\", false);else callback(3, \"type\", item);\n            },\n            text: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"standartParams row\",\n        children: [obj[\"type\"] === \"Насыпные\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"150px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"volumeInMetr\",\n              placeholder: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u0432 \\u043C\\xB3\",\n              value: obj[\"volumeInMetr\"] || \"\",\n              onChange: function onChange(e) {\n                callback(3, \"volumeInMetr\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"165px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"weight\",\n              placeholder: \"\\u0412\\u0435\\u0441 \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n              value: obj[\"weight\"] || \"\",\n              onChange: function onChange(e) {\n                callback(3, \"weight\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true), obj[\"type\"] === \"Наливные\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"150px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"volumeInLiter\",\n              placeholder: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u0432 \\u043B\",\n              value: obj[\"volumeInLiter\"] || \"\",\n              onChange: function onChange(e) {\n                callback(3, \"volumeInLiter\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"165px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"weight\",\n              placeholder: \"\\u0412\\u0435\\u0441 \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n              value: obj[\"weight\"] || \"\",\n              onChange: function onChange(e) {\n                callback(3, \"weight\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  }\n}, {\n  id: 4,\n  name: \"Курьерские грузы\",\n  img: hand,\n  fieldsLabel: {\n    type: \"Тип\",\n    weight: \"Вес в кг\",\n    length: \"Длинна в см\",\n    width: \"Ширина в см\",\n    height: \"Высота в см\"\n  },\n  //IS стандарт если обычные, в условии в заказе прописано\n  fields: function fields(callback, obj) {\n    var car = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var arrayCheck = [\"Обычные\", \"Документы\"];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [arrayCheck.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"type\".concat(index),\n            name: \"type\",\n            value: obj[\"type\"] == item,\n            onChange: function onChange() {\n              callback(4, \"type\", item);\n            },\n            text: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, _this);\n      }), obj[\"type\"] === arrayCheck[1] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            maxWidth: \"150px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            name: \"weight\",\n            placeholder: \"\\u0412\\u0435\\u0441 \\u0432 \\u043A\\u0433\",\n            value: obj[\"weight\"] || \"\",\n            onChange: function onChange(e) {\n              callback(4, \"weight\", Number(e.target.value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row colspan-input px-3\",\n          style: {\n            marginLeft: \"0\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"\\u0414\\u043B\\u0438\\u043D\\u0430\",\n            className: \"text-center\",\n            style: {\n              margin: \"0 0 0 0\"\n            },\n            value: obj[\"length\"] || \"\",\n            onChange: function onChange(e) {\n              callback(4, \"length\", Number(e.target.value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            placeholder: \"\\u0428\\u0438\\u0440\\u0438\\u043D\\u0430\",\n            className: \"text-center\",\n            value: obj[\"width\"] || \"\",\n            onChange: function onChange(e) {\n              callback(4, \"width\", Number(e.target.value));\n            },\n            style: {\n              margin: \"0 0 0 0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            className: \"text-center\",\n            value: obj[\"height\"] || \"\",\n            onChange: function onChange(e) {\n              callback(4, \"height\", Number(e.target.value));\n            },\n            placeholder: \"\\u0412\\u044B\\u0441\\u043E\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true)]\n    }, void 0, true);\n  }\n}, {\n  id: 5,\n  name: \"Коммерческие грузы\",\n  img: commerce,\n  isStandart: true\n}, //Pro\n{\n  id: 7,\n  name: \"Автомобили\",\n  isPro: true,\n  fieldsLabel: {\n    carName: \"Марка, Модель машины\",\n    count: \"Количество\"\n  },\n  fields: function fields(callback, obj) {\n    var car = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block\",\n        style: {\n          maxWidth: \"320px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"carName\",\n          placeholder: \"\\u041C\\u0430\\u0440\\u043A\\u0430, \\u041C\\u043E\\u0434\\u0435\\u043B\\u044C \\u043C\\u0430\\u0448\\u0438\\u043D\\u044B\",\n          value: obj[\"carName\"] || \"\",\n          onChange: function onChange(e) {\n            callback(7, \"carName\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block\",\n        style: {\n          maxWidth: \"140px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"\\u041A\\u043E\\u043B-\\u0432\\u043E\",\n          placeholder: \"\\u041A\\u043E\\u043B-\\u0432\\u043E\",\n          value: obj[\"count\"] || \"\",\n          onChange: function onChange(e) {\n            callback(7, \"count\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  }\n}, {\n  id: 8,\n  name: \"Мототехника\",\n  isPro: true,\n  fieldsLabel: {\n    weigth: \"Вес\",\n    count: \"Количество\"\n  },\n  fields: function fields(callback, obj) {\n    var car = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block\",\n        style: {\n          maxWidth: \"320px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"weigth\",\n          placeholder: \"\\u0412\\u0435\\u0441\",\n          value: obj[\"weigth\"] || \"\",\n          onChange: function onChange(e) {\n            callback(8, \"weigth\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block\",\n        style: {\n          maxWidth: \"140px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"\\u041A\\u043E\\u043B-\\u0432\\u043E\",\n          placeholder: \"\\u041A\\u043E\\u043B-\\u0432\\u043E\",\n          value: obj[\"count\"] || \"\",\n          onChange: function onChange(e) {\n            callback(8, \"count\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  }\n}, {\n  id: 10,\n  name: \"Водный транспорт\",\n  isPro: true,\n  isStandart: true\n}, {\n  id: 11,\n  name: \"Перевозка животных\",\n  isPro: true,\n  fieldsLabel: {\n    animalName: \"Название животного\",\n    count: \"Количество\"\n  },\n  fields: function fields(callback, obj) {\n    var car = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var isFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!isFilter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block\",\n        style: {\n          maxWidth: \"320px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"animalName\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u043E\\u0433\\u043E\",\n          value: obj[\"animalName\"] || \"\",\n          onChange: function onChange(e) {\n            callback(11, \"animalName\", e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-block\",\n        style: {\n          maxWidth: \"140px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"count\",\n          placeholder: \"\\u041A\\u043E\\u043B-\\u0432\\u043E\",\n          value: obj[\"count\"] || \"\",\n          onChange: function onChange(e) {\n            callback(11, \"count\", Number(e.target.value));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  }\n}, {\n  id: 13,\n  name: \"Продукты питания\",\n  isPro: true,\n  fieldsLabel: {\n    type: \"Тип\",\n    volumeInLiter: \"Объем в литрах\",\n    volumeInMetr: \"Объем в м&sup3;\",\n    weight: \"Вес в тоннах\"\n  },\n  fields: function fields(callback, obj) {\n    var car = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var arrayCheck = [\"Насыпные\", \"Наливные\", \"Обычные\"];\n    if (car && car.find(function (item) {\n      return item === 1 || item === 9 || item === 11 || item === 12 || item === 2 || item === 3;\n    })) arrayCheck = [arrayCheck[2]];\n    if (car && car.find(function (item) {\n      return item === 10 || item === 7;\n    })) arrayCheck = [arrayCheck[0]];\n    if (car && car.find(function (item) {\n      return item === 6;\n    })) arrayCheck = [arrayCheck[1]];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [arrayCheck.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            id: \"eatType\".concat(index),\n            name: \"type\",\n            value: obj[\"type\"] == item,\n            onChange: function onChange() {\n              if (obj[\"type\"] == item) callback(13, \"type\", false);else callback(13, \"type\", item);\n            },\n            text: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 15\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"standartParams row\",\n        children: [obj[\"type\"] === \"Насыпные\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"150px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"volumeInMetr\",\n              placeholder: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u0432 \\u043C\\xB3\",\n              value: obj[\"volumeInMetr\"] || \"\",\n              onChange: function onChange(e) {\n                callback(13, \"volumeInMetr\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"165px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"weight\",\n              placeholder: \"\\u0412\\u0435\\u0441 \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n              value: obj[\"weight\"] || \"\",\n              onChange: function onChange(e) {\n                callback(13, \"weight\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true), obj[\"type\"] === \"Наливные\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"150px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"volumeInLiter\",\n              placeholder: \"\\u041E\\u0431\\u044A\\u0435\\u043C \\u0432 \\u043B\",\n              value: obj[\"volumeInLiter\"] || \"\",\n              onChange: function onChange(e) {\n                callback(13, \"volumeInLiter\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            style: {\n              maxWidth: \"165px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              name: \"weight\",\n              placeholder: \"\\u0412\\u0435\\u0441 \\u0432 \\u0442\\u043E\\u043D\\u043D\\u0430\\u0445\",\n              value: obj[\"weight\"] || \"\",\n              onChange: function onChange(e) {\n                callback(13, \"weight\", Number(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  }\n}, {\n  id: 15,\n  name: \"Вывоз мусора\",\n  isPro: true,\n  isStandart: true\n}, {\n  id: 6,\n  name: \"Другое \",\n  img: circles,\n  isPro: true,\n  isStandart: true\n}, {\n  id: 16,\n  name: \"Эвакуатор\",\n  img: circles\n}];","map":{"version":3,"sources":["E:/SSR/config/baseInfo/cargoTypesList.js"],"names":["box","circles","commerce","divan","hand","list","CheckBox","Input","Select","React","id","name","img","isStandart","fieldsLabel","type","volumeInLiter","volumeInMetr","weight","fields","callback","obj","car","arrayCheck","find","item","map","index","display","maxWidth","e","Number","target","value","length","width","height","marginLeft","alignItems","margin","isPro","carName","count","weigth","animalName","isFilter"],"mappings":"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","sourcesContent":["import box from \"../../img/offer&order/box.svg\";\r\nimport circles from \"../../img/offer&order/circles.svg\";\r\nimport commerce from \"../../img/offer&order/commerce.svg\";\r\nimport divan from \"../../img/offer&order/divan.svg\";\r\nimport hand from \"../../img/offer&order/hand.svg\";\r\nimport list from \"../../img/offer&order/list.svg\";\r\nimport CheckBox from \"../../Elements/CheckBox\";\r\nimport Input from \"../../Elements/Input\";\r\nimport Select from \"../../Elements/Select\";\r\nimport React from \"react\";\r\n//fieldsLabel  Лейблы полей для вывода\r\n//Fields функция вывода полей для типа груза\r\n//fields функция принимает\r\n//1)Функцию изменения параметра\r\n//2)Параметры для вставки в значение полей\r\n//3) Типы машин, для уловного рендеринга полей. Некоторые отсутсвуют в каком то типе машин\r\nexport default [\r\n  {\r\n    id: 1,\r\n    name: \"Коробка\",\r\n    img: box,\r\n    isStandart: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Мебель \",\r\n    img: divan,\r\n    isStandart: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Строительные грузы\",\r\n    img: list,\r\n    fieldsLabel: {\r\n      type: \"Тип\",\r\n      volumeInLiter: \"Объем в литрах\",\r\n      volumeInMetr: \"Объем в м&sup3;\",\r\n      weight: \"Вес в тоннах\",\r\n    },\r\n    fields: (callback, obj, car = false) => {\r\n      let arrayCheck = [\"Насыпные\", \"Наливные\", \"Обычные\"];\r\n      if (\r\n        car &&\r\n        car.find(\r\n          (item) =>\r\n            item === 1 ||\r\n            item === 9 ||\r\n            item === 11 ||\r\n            item === 12 ||\r\n            item === 2 ||\r\n            item === 3\r\n        )\r\n      )\r\n        arrayCheck = [arrayCheck[2]];\r\n      if (car && car.find((item) => item === 10 || item === 7))\r\n        arrayCheck = [arrayCheck[0]];\r\n      if (car && car.find((item) => item === 6)) arrayCheck = [arrayCheck[1]];\r\n      return (\r\n        <>\r\n          {arrayCheck.map((item, index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                }}\r\n                key={index}\r\n              >\r\n                <CheckBox\r\n                  id={`constructionType${index}`}\r\n                  name=\"type\"\r\n                  value={obj[\"type\"] == item}\r\n                  onChange={() => {\r\n                    if (obj[\"type\"] == item) callback(3, \"type\", false);\r\n                    else callback(3, \"type\", item);\r\n                  }}\r\n                  text={item}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"standartParams row\">\r\n            {obj[\"type\"] === \"Насыпные\" && (\r\n              <>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"150px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"volumeInMetr\"\r\n                    placeholder=\"Объем в м&sup3;\"\r\n                    value={obj[\"volumeInMetr\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(3, \"volumeInMetr\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"165px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    placeholder=\"Вес в тоннах\"\r\n                    value={obj[\"weight\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(3, \"weight\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            {obj[\"type\"] === \"Наливные\" && (\r\n              <>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"150px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"volumeInLiter\"\r\n                    placeholder=\"Объем в л\"\r\n                    value={obj[\"volumeInLiter\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(3, \"volumeInLiter\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"165px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    placeholder=\"Вес в тоннах\"\r\n                    value={obj[\"weight\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(3, \"weight\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Курьерские грузы\",\r\n    img: hand,\r\n    fieldsLabel: {\r\n      type: \"Тип\",\r\n      weight: \"Вес в кг\",\r\n      length: \"Длинна в см\",\r\n      width: \"Ширина в см\",\r\n      height: \"Высота в см\",\r\n    },\r\n    //IS стандарт если обычные, в условии в заказе прописано\r\n    fields: (callback, obj, car = false) => {\r\n      let arrayCheck = [\"Обычные\", \"Документы\"];\r\n      return (\r\n        <>\r\n          {arrayCheck.map((item, index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                }}\r\n                key={index}\r\n              >\r\n                <CheckBox\r\n                  id={`type${index}`}\r\n                  name=\"type\"\r\n                  value={obj[\"type\"] == item}\r\n                  onChange={() => {\r\n                    callback(4, \"type\", item);\r\n                  }}\r\n                  text={item}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n          {obj[\"type\"] === arrayCheck[1] && (\r\n            <>\r\n              <div\r\n                className=\"col\"\r\n                style={{\r\n                  maxWidth: \"150px\",\r\n                }}\r\n              >\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"weight\"\r\n                  placeholder=\"Вес в кг\"\r\n                  value={obj[\"weight\"] || \"\"}\r\n                  onChange={(e) => {\r\n                    callback(4, \"weight\", Number(e.target.value));\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"row colspan-input px-3\"\r\n                style={{\r\n                  marginLeft: \"0\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Input\r\n                  type=\"number\"\r\n                  placeholder=\"Длина\"\r\n                  className=\"text-center\"\r\n                  style={{ margin: \"0 0 0 0\" }}\r\n                  value={obj[\"length\"] || \"\"}\r\n                  onChange={(e) => {\r\n                    callback(4, \"length\", Number(e.target.value));\r\n                  }}\r\n                />\r\n                <Input\r\n                  type=\"number\"\r\n                  placeholder=\"Ширина\"\r\n                  className=\"text-center\"\r\n                  value={obj[\"width\"] || \"\"}\r\n                  onChange={(e) => {\r\n                    callback(4, \"width\", Number(e.target.value));\r\n                  }}\r\n                  style={{ margin: \"0 0 0 0\" }}\r\n                />\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"text-center\"\r\n                  value={obj[\"height\"] || \"\"}\r\n                  onChange={(e) => {\r\n                    callback(4, \"height\", Number(e.target.value));\r\n                  }}\r\n                  placeholder=\"Высота\"\r\n                />\r\n\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Коммерческие грузы\",\r\n    img: commerce,\r\n    isStandart: true,\r\n  },\r\n  //Pro\r\n  {\r\n    id: 7,\r\n    name: \"Автомобили\",\r\n    isPro: true,\r\n    fieldsLabel: {\r\n      carName: \"Марка, Модель машины\",\r\n      count: \"Количество\",\r\n    },\r\n    fields: (callback, obj, car = false) => {\r\n      return (\r\n        <>\r\n          <div\r\n            className=\"d-inline-block\"\r\n            style={{\r\n              maxWidth: \"320px\",\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              name=\"carName\"\r\n              placeholder=\"Марка, Модель машины\"\r\n              value={obj[\"carName\"] || \"\"}\r\n              onChange={(e) => {\r\n                callback(7, \"carName\", e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"d-inline-block\"\r\n            style={{\r\n              maxWidth: \"140px\",\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"number\"\r\n              name=\"Кол-во\"\r\n              placeholder=\"Кол-во\"\r\n              value={obj[\"count\"] || \"\"}\r\n              onChange={(e) => {\r\n                callback(7, \"count\", e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Мототехника\",\r\n    isPro: true,\r\n    fieldsLabel: {\r\n      weigth: \"Вес\",\r\n      count: \"Количество\",\r\n    },\r\n    fields: (callback, obj, car = false) => {\r\n      return (\r\n        <>\r\n          <div\r\n            className=\"d-inline-block\"\r\n            style={{\r\n              maxWidth: \"320px\",\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              name=\"weigth\"\r\n              placeholder=\"Вес\"\r\n              value={obj[\"weigth\"] || \"\"}\r\n              onChange={(e) => {\r\n                callback(8, \"weigth\", e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"d-inline-block\"\r\n            style={{\r\n              maxWidth: \"140px\",\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"number\"\r\n              name=\"Кол-во\"\r\n              placeholder=\"Кол-во\"\r\n              value={obj[\"count\"] || \"\"}\r\n              onChange={(e) => {\r\n                callback(8, \"count\", e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Водный транспорт\",\r\n    isPro: true,\r\n    isStandart: true,\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Перевозка животных\",\r\n    isPro: true,\r\n    fieldsLabel: {\r\n      animalName: \"Название животного\",\r\n      count: \"Количество\",\r\n    },\r\n    fields: (callback, obj, car = false, isFilter = false) => {\r\n      return (\r\n        <>\r\n          {!isFilter && (\r\n            <div\r\n              className=\"d-inline-block\"\r\n              style={{\r\n                maxWidth: \"320px\",\r\n              }}\r\n            >\r\n              <Input\r\n                type=\"text\"\r\n                name=\"animalName\"\r\n                placeholder=\"Название животного\"\r\n                value={obj[\"animalName\"] || \"\"}\r\n                onChange={(e) => {\r\n                  callback(11, \"animalName\", e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div\r\n            className=\"d-inline-block\"\r\n            style={{\r\n              maxWidth: \"140px\",\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"number\"\r\n              name=\"count\"\r\n              placeholder=\"Кол-во\"\r\n              value={obj[\"count\"] || \"\"}\r\n              onChange={(e) => {\r\n                callback(11, \"count\", Number(e.target.value));\r\n              }}\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Продукты питания\",\r\n    isPro: true,\r\n    fieldsLabel: {\r\n      type: \"Тип\",\r\n      volumeInLiter: \"Объем в литрах\",\r\n      volumeInMetr: \"Объем в м&sup3;\",\r\n      weight: \"Вес в тоннах\",\r\n    },\r\n    fields: (callback, obj, car = false) => {\r\n      let arrayCheck = [\"Насыпные\", \"Наливные\", \"Обычные\"];\r\n      if (\r\n        car &&\r\n        car.find(\r\n          (item) =>\r\n            item === 1 ||\r\n            item === 9 ||\r\n            item === 11 ||\r\n            item === 12 ||\r\n            item === 2 ||\r\n            item === 3\r\n        )\r\n      )\r\n        arrayCheck = [arrayCheck[2]];\r\n      if (car && car.find((item) => item === 10 || item === 7))\r\n        arrayCheck = [arrayCheck[0]];\r\n      if (car && car.find((item) => item === 6)) arrayCheck = [arrayCheck[1]];\r\n      return (\r\n        <>\r\n          {arrayCheck.map((item, index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                }}\r\n                key={index}\r\n              >\r\n                <CheckBox\r\n                  id={`eatType${index}`}\r\n                  name=\"type\"\r\n                  value={obj[\"type\"] == item}\r\n                  onChange={() => {\r\n                    if (obj[\"type\"] == item) callback(13, \"type\", false);\r\n                    else callback(13, \"type\", item);\r\n                  }}\r\n                  text={item}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"standartParams row\">\r\n            {obj[\"type\"] === \"Насыпные\" && (\r\n              <>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"150px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"volumeInMetr\"\r\n                    placeholder=\"Объем в м&sup3;\"\r\n                    value={obj[\"volumeInMetr\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(13, \"volumeInMetr\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"165px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    placeholder=\"Вес в тоннах\"\r\n                    value={obj[\"weight\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(13, \"weight\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            {obj[\"type\"] === \"Наливные\" && (\r\n              <>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"150px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"volumeInLiter\"\r\n                    placeholder=\"Объем в л\"\r\n                    value={obj[\"volumeInLiter\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(13, \"volumeInLiter\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"col\"\r\n                  style={{\r\n                    maxWidth: \"165px\",\r\n                  }}\r\n                >\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    placeholder=\"Вес в тоннах\"\r\n                    value={obj[\"weight\"] || \"\"}\r\n                    onChange={(e) => {\r\n                      callback(13, \"weight\", Number(e.target.value));\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Вывоз мусора\",\r\n    isPro: true,\r\n    isStandart: true,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Другое \",\r\n    img: circles,\r\n    isPro: true,\r\n    isStandart: true,\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Эвакуатор\",\r\n    img: circles,\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}