{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\MainElements\\\\Cities.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// App\nimport React from \"react\";\nimport Link from \"../Elements/Link\";\nvar cities = [\"Казань\", \"Волгоград\", \"Нижний Новгород\", \"Новосибирск\", \"Екатеринбург\", \"Красноярск\", \"Челябинск\", \"Уфа\", \"Владивосток\", \"Саратов\", \"МО, Долгопрудный\", \"Барнаул\", \"Смоленск\", \"Тула\", \"Владимир\", \"Ярославль\", \"Белгород\", \"Курск\", \"Ижевск\", \"Новгород\", \"Орел\", \"Краснодар\", \"Самара\", \"Санкт-Петербург\", \"Ростов-на-Дону\", \"Ставрополь\", \"Воронеж\", \"Иркутск\", \"Тюмень\", \"Омск\", \"Пермь\", \"МО, Домодедово\", \"МО, Дубна\", \"Калуга\", \"Рязань\", \"Иваново\", \"Тверь\", \"Брянск\", \"Липецк\", \"Тольятти\", \"Псков\", \"Кострома\"];\n\nvar Cities = /*#__PURE__*/function (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  var _super = _createSuper(Cities);\n\n  function Cities() {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      perColumn: 11,\n      citiesCount: 42,\n      cities: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateDimensions\", function () {\n      var perColumn, citiesCount;\n\n      if (window.innerWidth > 640) {\n        perColumn = 11;\n        citiesCount = 42;\n      }\n\n      if (window.innerWidth < 640) {\n        perColumn = 7;\n        citiesCount = 21;\n      }\n\n      if (window.innerWidth < 480) {\n        perColumn = 7;\n        citiesCount = 14;\n      }\n\n      var sliced_array = [];\n\n      for (var i = 0; i < citiesCount; i += perColumn) {\n        sliced_array.push(cities.slice(i, i + perColumn));\n      }\n\n      _this.setState({\n        perColumn: perColumn,\n        citiesCount: citiesCount,\n        cities: sliced_array\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: this.state.cities.map(function (item, i) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"main-cities-item\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: item.map(function (item1, i) {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/search-offer?city=\" + item1,\n                        children: item1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 27\n                      }, _this2)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 25\n                    }, _this2);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, _this2)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, _this2);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nexport default Cities;","map":{"version":3,"sources":["E:/SSR/MainElements/Cities.js"],"names":["React","Link","cities","Cities","perColumn","citiesCount","window","innerWidth","sliced_array","i","push","slice","setState","updateDimensions","addEventListener","removeEventListener","state","map","item","item1","Component"],"mappings":"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","sourcesContent":["// App\r\nimport React from \"react\";\r\nimport Link from \"../Elements/Link\";\r\nvar cities = [\r\n  \"Казань\",\r\n  \"Волгоград\",\r\n  \"Нижний Новгород\",\r\n  \"Новосибирск\",\r\n  \"Екатеринбург\",\r\n  \"Красноярск\",\r\n  \"Челябинск\",\r\n  \"Уфа\",\r\n  \"Владивосток\",\r\n  \"Саратов\",\r\n  \"МО, Долгопрудный\",\r\n  \"Барнаул\",\r\n  \"Смоленск\",\r\n  \"Тула\",\r\n  \"Владимир\",\r\n  \"Ярославль\",\r\n  \"Белгород\",\r\n  \"Курск\",\r\n  \"Ижевск\",\r\n  \"Новгород\",\r\n  \"Орел\",\r\n  \"Краснодар\",\r\n  \"Самара\",\r\n  \"Санкт-Петербург\",\r\n  \"Ростов-на-Дону\",\r\n  \"Ставрополь\",\r\n  \"Воронеж\",\r\n  \"Иркутск\",\r\n  \"Тюмень\",\r\n  \"Омск\",\r\n  \"Пермь\",\r\n  \"МО, Домодедово\",\r\n  \"МО, Дубна\",\r\n  \"Калуга\",\r\n  \"Рязань\",\r\n  \"Иваново\",\r\n  \"Тверь\",\r\n  \"Брянск\",\r\n  \"Липецк\",\r\n  \"Тольятти\",\r\n  \"Псков\",\r\n  \"Кострома\",\r\n];\r\nclass Cities extends React.Component {\r\n  state = {\r\n    perColumn: 11,\r\n    citiesCount: 42,\r\n    cities: [],\r\n  };\r\n  updateDimensions = () => {\r\n    let perColumn, citiesCount;\r\n    if (window.innerWidth > 640) {\r\n      perColumn = 11;\r\n      citiesCount = 42;\r\n    }\r\n    if (window.innerWidth < 640) {\r\n      perColumn = 7;\r\n      citiesCount = 21;\r\n    }\r\n    if (window.innerWidth < 480) {\r\n      perColumn = 7;\r\n      citiesCount = 14;\r\n    }\r\n    let sliced_array = [];\r\n    for (let i = 0; i < citiesCount; i += perColumn) {\r\n      sliced_array.push(cities.slice(i, i + perColumn));\r\n    }\r\n\r\n    this.setState({\r\n      perColumn: perColumn,\r\n      citiesCount: citiesCount,\r\n      cities: sliced_array,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {this.state.cities.map((item, i) => {\r\n              return (\r\n                <div key={i} className=\"main-cities-item\">\r\n                  <ul>\r\n                    {item.map((item1, i) => {\r\n                      return (\r\n                        <li key={i}>\r\n                          <Link to={\"/search-offer?city=\" + item1}>\r\n                            {item1}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cities;\r\n"]},"metadata":{},"sourceType":"module"}