{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\Elements\\\\CheckBox.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// App\nimport React from \"react\";\n\nvar CheckBox = /*#__PURE__*/function (_React$Component) {\n  _inherits(CheckBox, _React$Component);\n\n  var _super = _createSuper(CheckBox);\n\n  function CheckBox() {\n    _classCallCheck(this, CheckBox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CheckBox, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: this.props.id,\n          name: this.props.name,\n          checked: this.props.value || \"\",\n          className: \"input-\".concat(this.props.type),\n          onChange: this.props.onChange ? this.props.onChange : function () {},\n          disabled: this.props.disable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: this.props.id,\n          className: \"mr-2\",\n          style: {\n            display: \"inline-block\",\n            verticalAlign: \"sub\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), this.props.text && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"\".concat(this.props.wrapperlabelClass ? this.props.wrapperlabelClass : \"\"),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: this.props.id,\n            className: \"\".concat(this.props.labelClass ? this.props.labelClass : \"f-12\"),\n            style: {\n              display: \"inline-block\"\n            },\n            children: this.props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return CheckBox;\n}(React.Component);\n\nexport default CheckBox;","map":{"version":3,"sources":["E:/SSR/Elements/CheckBox.js"],"names":["React","CheckBox","props","id","name","value","type","onChange","disable","display","verticalAlign","text","wrapperlabelClass","labelClass","Component"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;;;;;;;;;6BACK;AACP,0BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,EAFjB;AAGE,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAHnB;AAIE,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,KAAX,IAAoB,EAJ/B;AAKE,UAAA,SAAS,kBAAW,KAAKH,KAAL,CAAWI,IAAtB,CALX;AAME,UAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAAX,GAAsB,KAAKL,KAAL,CAAWK,QAAjC,GAA4C,YAAM,CAAE,CANhE;AAOE,UAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM;AAPvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,EADtB;AAEE,UAAA,SAAS,EAAC,MAFZ;AAGE,UAAA,KAAK,EAAE;AAAEM,YAAAA,OAAO,EAAE,cAAX;AAA2BC,YAAAA,aAAa,EAAE;AAA1C;AAHT;AAAA;AAAA;AAAA;AAAA,gBAVF,EAeG,KAAKR,KAAL,CAAWS,IAAX,iBACC;AACE,UAAA,SAAS,YACP,KAAKT,KAAL,CAAWU,iBAAX,GAA+B,KAAKV,KAAL,CAAWU,iBAA1C,GAA8D,EADvD,CADX;AAAA,iCAKE;AACE,YAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,EADtB;AAEE,YAAA,SAAS,YACP,KAAKD,KAAL,CAAWW,UAAX,GAAwB,KAAKX,KAAL,CAAWW,UAAnC,GAAgD,MADzC,CAFX;AAKE,YAAA,KAAK,EAAE;AAAEJ,cAAAA,OAAO,EAAE;AAAX,aALT;AAAA,sBAOG,KAAKP,KAAL,CAAWS;AAPd;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA,sBADF;AAmCD;;;;EArCoBX,KAAK,CAACc,S;;AAwC7B,eAAeb,QAAf","sourcesContent":["// App\r\nimport React from \"react\";\r\n\r\nclass CheckBox extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={this.props.id}\r\n          name={this.props.name}\r\n          checked={this.props.value || \"\"}\r\n          className={`input-${this.props.type}`}\r\n          onChange={this.props.onChange ? this.props.onChange : () => {}}\r\n          disabled={this.props.disable}\r\n        />\r\n        <label\r\n          htmlFor={this.props.id}\r\n          className=\"mr-2\"\r\n          style={{ display: \"inline-block\", verticalAlign: \"sub\" }}\r\n        ></label>\r\n        {this.props.text && (\r\n          <span\r\n            className={`${\r\n              this.props.wrapperlabelClass ? this.props.wrapperlabelClass : \"\"\r\n            }`}\r\n          >\r\n            <label\r\n              htmlFor={this.props.id}\r\n              className={`${\r\n                this.props.labelClass ? this.props.labelClass : \"f-12\"\r\n              }`}\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {this.props.text}\r\n            </label>\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckBox;\r\n"]},"metadata":{},"sourceType":"module"}