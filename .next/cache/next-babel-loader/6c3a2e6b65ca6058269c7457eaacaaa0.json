{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { USER_LOGOUT, USER_LOGIN, NOTIFICATIONS_NOREAD_GET } from \"../constants\";\nimport api from \"../../config/api\";\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_LOGOUT\n    });\n  };\n};\nexport var loginUser = function loginUser(apiToken) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      fetch(\"\".concat(api.urlApi, \"/api/user\"), {\n        method: \"get\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(apiToken)\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n          var user, myCountsArticles, takeCountsArticles, onlyNoRead, notificationCounts, dialogsCount;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  user = _ref.user, myCountsArticles = _ref.myCountsArticles, takeCountsArticles = _ref.takeCountsArticles, onlyNoRead = _ref.onlyNoRead, notificationCounts = _ref.notificationCounts, dialogsCount = _ref.dialogsCount;\n                  user.apiToken = apiToken;\n                  dispatch({\n                    type: USER_LOGIN,\n                    payload: user\n                  });\n                  dispatch({\n                    type: NOTIFICATIONS_NOREAD_GET,\n                    payload: onlyNoRead\n                  }); // dispatch({\n                  //   type: DIALOGS_SET_NOREAD,\n                  //   payload: { dialogsCount },\n                  // });\n\n                  resolve();\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }())[\"catch\"](function (e) {\n        console.log(e);\n        resolve();\n      });\n    });\n  };\n};","map":{"version":3,"sources":["E:/SSR/redux/actions/user.js"],"names":["USER_LOGOUT","USER_LOGIN","NOTIFICATIONS_NOREAD_GET","api","logoutUser","dispatch","type","loginUser","apiToken","Promise","resolve","reject","fetch","urlApi","method","headers","Accept","Authorization","then","response","json","user","myCountsArticles","takeCountsArticles","onlyNoRead","notificationCounts","dialogsCount","payload","e","console","log"],"mappings":";;AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,wBAHF,QAIO,cAJP;AAKA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAACC,QAAD,EAAc;AAC5CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD,GAJyB;AAAA,CAAnB;AAKP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD;AAAA,SAAc,UAACH,QAAD,EAAc;AACnD,WAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,MAAAA,KAAK,WAAIT,GAAG,CAACU,MAAR,gBAA2B;AAC9BC,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB,kBAFT;AAGPC,UAAAA,aAAa,mBAAYT,QAAZ;AAHN;AAFqB,OAA3B,CAAL,CAQGU,IARH,CAQQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OARR,EASGF,IATH;AAAA,6EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AACEG,kBAAAA,IADF,QACEA,IADF,EAEEC,gBAFF,QAEEA,gBAFF,EAGEC,kBAHF,QAGEA,kBAHF,EAIEC,UAJF,QAIEA,UAJF,EAKEC,kBALF,QAKEA,kBALF,EAMEC,YANF,QAMEA,YANF;AAQEL,kBAAAA,IAAI,CAACb,QAAL,GAAgBA,QAAhB;AACAH,kBAAAA,QAAQ,CAAC;AACPC,oBAAAA,IAAI,EAAEL,UADC;AAEP0B,oBAAAA,OAAO,EAAEN;AAFF,mBAAD,CAAR;AAKAhB,kBAAAA,QAAQ,CAAC;AACPC,oBAAAA,IAAI,EAAEJ,wBADC;AAEPyB,oBAAAA,OAAO,EAAEH;AAFF,mBAAD,CAAR,CAdF,CAmBE;AACA;AACA;AACA;;AACAd,kBAAAA,OAAO;;AAvBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVJ;;AAAA;AAAA;AAAA;AAAA,oBAoCS,UAACkB,CAAD,EAAO;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAlB,QAAAA,OAAO;AACR,OAvCH;AAwCD,KAzCM,CAAP;AA0CD,GA3CwB;AAAA,CAAlB","sourcesContent":["import {\r\n  USER_LOGOUT,\r\n  USER_LOGIN,\r\n  NOTIFICATIONS_NOREAD_GET,\r\n} from \"../constants\";\r\nimport api from \"../../config/api\";\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n};\r\nexport const loginUser = (apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/user`, {\r\n      method: \"get\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then(\r\n        async ({\r\n          user,\r\n          myCountsArticles,\r\n          takeCountsArticles,\r\n          onlyNoRead,\r\n          notificationCounts,\r\n          dialogsCount,\r\n        }) => {\r\n          user.apiToken = apiToken;\r\n          dispatch({\r\n            type: USER_LOGIN,\r\n            payload: user,\r\n          });\r\n\r\n          dispatch({\r\n            type: NOTIFICATIONS_NOREAD_GET,\r\n            payload: onlyNoRead,\r\n          });\r\n\r\n          // dispatch({\r\n          //   type: DIALOGS_SET_NOREAD,\r\n          //   payload: { dialogsCount },\r\n          // });\r\n          resolve();\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(e);\r\n        resolve();\r\n      });\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}