{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\SSR\\\\Elements\\\\Slider.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// App\nimport React from \"react\";\nimport prevQuest from \"../img/prevQuest.png\";\nimport prevQuestEnable from \"../img/prevQuestEnable.png\";\nimport nextQuest from \"../img/nextQuest.png\";\nimport nextQuestEnable from \"../img/nextQuestEnable.png\";\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"updateDimensions\", () => {\n      this.refs.scrollLeft = 0;\n      this.checkButtons(this.refs.offsetWidth, this.refs.scrollLeft);\n    });\n\n    _defineProperty(this, \"checkButtons\", (offsetWidthValue, scrollLeftValue) => {\n      if (offsetWidthValue === this.refs.scrollWidth) {\n        this.setState({\n          prevDisable: true,\n          nextDisable: true\n        });\n      } else this.setState({\n        prevDisable: scrollLeftValue <= 0 ? true : false,\n        nextDisable: scrollLeftValue + offsetWidthValue >= this.refs.scrollWidth ? true : false\n      });\n    });\n\n    this.state = {\n      prevDisable: true,\n      nextDisable: this.refs && this.refs.offsetWidth >= this.refs.scrollWidth ? true : false\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.checkButtons(this.refs.offsetWidth, this.refs.scrollLeft);\n  }\n\n  render() {\n    let offsetWidthValue = this.refs.offsetWidth,\n        scrollLeftValue = this.refs.scrollLeft;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(!this.state.nextDisable || !this.state.prevDisable) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `btn-prev`,\n          disabled: this.state.prevDisable,\n          onClick: () => {\n            scrollLeftValue = this.refs.scrollLeft - this.refs.offsetWidth;\n            this.refs.scrollLeft -= this.refs.offsetWidth;\n            this.checkButtons(offsetWidthValue, scrollLeftValue);\n          },\n          children: this.state.prevDisable ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: prevQuest,\n            alt: \"prevQuest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: prevQuestEnable,\n            alt: \"prevQuestEnable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `btn-next`,\n          disabled: this.state.nextDisable,\n          onClick: () => {\n            scrollLeftValue = this.refs.scrollLeft + this.refs.offsetWidth;\n            this.refs.scrollLeft += this.refs.offsetWidth;\n            this.checkButtons(offsetWidthValue, scrollLeftValue);\n          },\n          children: this.state.nextDisable ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nextQuest,\n            alt: \"nextQuest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nextQuestEnable,\n            alt: \"nextQuestEnable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        ref: el => {\n          this.refs = el;\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-wrapper\",\n          children: this.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["E:/SSR/Elements/Slider.js"],"names":["React","prevQuest","prevQuestEnable","nextQuest","nextQuestEnable","Slider","Component","constructor","props","refs","scrollLeft","checkButtons","offsetWidth","offsetWidthValue","scrollLeftValue","scrollWidth","setState","prevDisable","nextDisable","state","componentWillUnmount","window","removeEventListener","updateDimensions","componentDidMount","addEventListener","render","el","children"],"mappings":"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","sourcesContent":["// App\r\nimport React from \"react\";\r\nimport prevQuest from \"../img/prevQuest.png\";\r\nimport prevQuestEnable from \"../img/prevQuestEnable.png\";\r\nimport nextQuest from \"../img/nextQuest.png\";\r\nimport nextQuestEnable from \"../img/nextQuestEnable.png\";\r\nclass Slider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prevDisable: true,\r\n      nextDisable:\r\n        this.refs && this.refs.offsetWidth >= this.refs.scrollWidth\r\n          ? true\r\n          : false,\r\n    };\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.refs.scrollLeft = 0;\r\n    this.checkButtons(this.refs.offsetWidth, this.refs.scrollLeft);\r\n  };\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.checkButtons(this.refs.offsetWidth, this.refs.scrollLeft);\r\n  }\r\n\r\n  checkButtons = (offsetWidthValue, scrollLeftValue) => {\r\n    if (offsetWidthValue === this.refs.scrollWidth) {\r\n      this.setState({\r\n        prevDisable: true,\r\n        nextDisable: true,\r\n      });\r\n    } else\r\n      this.setState({\r\n        prevDisable: scrollLeftValue <= 0 ? true : false,\r\n        nextDisable:\r\n          scrollLeftValue + offsetWidthValue >= this.refs.scrollWidth\r\n            ? true\r\n            : false,\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let offsetWidthValue = this.refs.offsetWidth,\r\n      scrollLeftValue = this.refs.scrollLeft;\r\n\r\n    return (\r\n      <>\r\n        {(!this.state.nextDisable || !this.state.prevDisable) && (\r\n          <div className=\"btn-block\">\r\n            <div\r\n              className={`btn-prev`}\r\n              disabled={this.state.prevDisable}\r\n              onClick={() => {\r\n                scrollLeftValue = this.refs.scrollLeft - this.refs.offsetWidth;\r\n                this.refs.scrollLeft -= this.refs.offsetWidth;\r\n                this.checkButtons(offsetWidthValue, scrollLeftValue);\r\n              }}\r\n            >\r\n              {this.state.prevDisable ? (\r\n                <img src={prevQuest} alt=\"prevQuest\" />\r\n              ) : (\r\n                <img src={prevQuestEnable} alt=\"prevQuestEnable\" />\r\n              )}\r\n            </div>\r\n\r\n            <div\r\n              className={`btn-next`}\r\n              disabled={this.state.nextDisable}\r\n              onClick={() => {\r\n                scrollLeftValue = this.refs.scrollLeft + this.refs.offsetWidth;\r\n                this.refs.scrollLeft += this.refs.offsetWidth;\r\n                this.checkButtons(offsetWidthValue, scrollLeftValue);\r\n              }}\r\n            >\r\n              {this.state.nextDisable ? (\r\n                <img src={nextQuest} alt=\"nextQuest\" />\r\n              ) : (\r\n                <img src={nextQuestEnable} alt=\"nextQuestEnable\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"slider-container\"\r\n          ref={(el) => {\r\n            this.refs = el;\r\n          }}\r\n        >\r\n          <div className=\"slider-wrapper\">{this.props.children}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}